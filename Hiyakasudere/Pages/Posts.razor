@page "/posts"
@using Hiyakasudere.Data.Internal.Data.Post
@using Hiyakasudere.Data.Internal.Config
@using Hiyakasudere.Data.Internal.MultiplatformInterfaces
@using Hiyakasudere.Pages.Modals
@inject IPostTranslationService PostService
@inject IFileManager FileManager

<input @onfocusout="@(DisplayPage)" type="text" class="form-control" value="@currentTags" id="postTempTags" placeholder="Enter tags" @oninput="(e) => {currentTags = e.Value.ToString(); UpdateTags();}">

<div class="carousel slide carousel-dark text-center"
     data-mdb-ride="carousel">
    <div class="carousel-inner py-4">
        <div class="carousel-item active">
            <div class="container">
                <div class="row justify-content-center">

                    @if (booruPosts == null)
                    {
                        <div class="col-sm-2 align-self-center">
                            <div class="spinner-grow text-danger" role="status"></div>
                        </div>
                    }
                    else
                    {

                        @foreach (var post in booruPosts.Select((elem, index) => ( elem, index )))
                        {
                            <div class="col-sm-2 align-self-center">
                                <div class="card" @onclick="() => ShowModal(post.index)">
                                    <img src="@post.elem.PreviewUrl" class="card-img-top rounded" />
                                </div>
                            </div>
                        }
                    }
                    
                </div>
            </div>
        </div>
    </div>
</div>
<div class="d-flex justify-content-center flex-nowrap">
    <div class="text-white mx-2 p-2">
        <nav>
            <ul class="pagination">
                <li class="page-item"><a class="page-link" @onclick="PrevPage">Previous</a></li>
                <li class="page-item"><a class="page-link">@currentPage</a></li>
                <li class="page-item"><a class="page-link" @onclick="NextPage">Next</a></li>
            </ul>
        </nav>
    </div>
 </div>


@code {
    [CascadingParameter] IModalService Modal { get; set; } = default!;

    private IEnumerable<PostInternal> booruPosts;

    private int currentPage = 1;
    private int availablePages = 1;
    private string currentTags = "";

    protected override async Task OnInitializedAsync()
    {
        await DisplayPage();
    }

    protected void UpdateTags()
    {
        PostService.UpdateTags(currentTags);
    }

    protected async Task DisplayPage()
    {
        availablePages = await PostService.GetPageCount();
        booruPosts = await PostService.GetPostData(currentPage);
        currentTags = String.Join(" ", PostService.GetTags());
    }

    protected async Task NextPage()
    {
        System.Diagnostics.Debug.WriteLine(currentPage + "__" + availablePages);
        if (currentPage + 1 <= availablePages)
        {
            currentPage++;
            await DisplayPage();
        }
    }

    protected async Task PrevPage()
    {
        if (currentPage - 1 >= 1)
        {
            currentPage--;
            await DisplayPage();
        }

    }

    private void ShowModal(int postId)
    {
        var options = new ModalOptions()
            {
                HideCloseButton = true,
                HideHeader = true,
                Position = ModalPosition.Middle,
                Size = ModalSize.Medium
            };

        var parameters = new ModalParameters().Add("PostData", booruPosts.ElementAt(postId));

        var modal = Modal.Show<ModalPostFull>("", parameters, options);
        System.Diagnostics.Debug.WriteLine(currentTags);
    }
}
